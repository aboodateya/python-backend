/* 1. Responsive Layout using Flexbox */
.flexbox-container {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  border: 2px solid #333;
  margin-bottom: 40px;
}
.flexbox-container header,
.flexbox-container footer {
  background-color: #333;
  color: white;
  text-align: center;
  padding: 1rem;
}
.flexbox-container main {
  flex: 1;
  display: flex;
  gap: 15px;
  padding: 10px;
}
.flexbox-container .sidebar {
  background-color: #ddd;
  flex: 1;
  padding: 1rem;
}
.flexbox-container .content {
  background-color: #fff;
  flex: 3;
  padding: 1rem;
}

/* Flexbox responsive */
@media (max-width: 768px) {
  .flexbox-container main {
    flex-direction: column;
  }
}

/* 2. Complex Layout using CSS Grid */
.grid-container {
  display: grid;
  grid-template-areas:
    "header header"
    "sidebar content"
    "footer footer";
  grid-template-columns: 1fr 3fr;
  gap: 15px;
  min-height: 80vh;
  border: 2px solid #555;
  margin-bottom: 40px;
  padding: 10px;
}
.grid-container header {
  grid-area: header;
  background-color: #555;
  color: white;
  padding: 1rem;
  text-align: center;
}
.grid-container .sidebar {
  grid-area: sidebar;
  background-color: #eee;
  padding: 1rem;
}
.grid-container .content {
  grid-area: content;
  background-color: #fff;
  padding: 1rem;
}
.grid-container footer {
  grid-area: footer;
  background-color: #555;
  color: white;
  padding: 1rem;
  text-align: center;
}

/* Grid responsive */
@media (max-width: 768px) {
  .grid-container {
    grid-template-areas:
      "header"
      "content"
      "sidebar"
      "footer";
    grid-template-columns: 1fr;
  }
}

/* 3. Responsive Webpage using Media Queries */
.media-box {
  margin-bottom: 40px;
  border: 2px solid #666;
  padding: 3rem;
  background-color: #ccc;
  text-align: center;
  font-size: 2rem;
  transition: background-color 0.3s ease, font-size 0.3s ease;
}

@media (max-width: 768px) {
  .media-box {
    background-color: #8fa;
    font-size: 1.5rem;
  }
}
@media (max-width: 480px) {
  .media-box {
    background-color: #fa8;
    font-size: 1.2rem;
  }
}

/* Exercise 1: Responsive Gallery Layout using Flexbox */
.gallery {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  margin-bottom: 40px;
}
.gallery img {
  width: calc(25% - 10px);
  height: 200px;
  object-fit: cover;
  border-radius: 4px;
}

/* Gallery responsive */
@media (max-width: 768px) {
  .gallery img {
    width: calc(50% - 10px);
  }
}
@media (max-width: 480px) {
  .gallery img {
    width: 100%;
  }
}

/* Exercise 2: Magazine-style Layout using CSS Grid */
.magazine-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 20px;
  margin-bottom: 40px;
}
.magazine-grid article {
  background-color: #eee;
  padding: 1rem;
  height: 200px;
  border-radius: 6px;
  box-shadow: 0 0 5px rgba(0,0,0,0.1);
}

/* Magazine responsive */
@media (max-width: 768px) {
  .magazine-grid {
    grid-template-columns: repeat(2, 1fr);
  }
}
@media (max-width: 480px) {
  .magazine-grid {
    grid-template-columns: 1fr;
  }
}

/* Exercise 3: Convert Desktop Layout to Mobile-friendly */
.responsive-container {
  display: flex;
  gap: 20px;
  border: 2px solid #090;
  padding: 10px;
}
.responsive-container .main-content,
.responsive-container .sidebar {
  background-color: #d0d0d0;
  padding: 1rem;
  min-height: 200px;
  flex: 1;
  border-radius: 4px;
}

/* Responsive conversion */
@media (max-width: 600px) {
  .responsive-container {
    flex-direction: column;
  }
}
